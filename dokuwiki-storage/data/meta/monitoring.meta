a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1489403466;s:8:"modified";i:1489403606;}s:7:"creator";s:14:"Helen Nevskaya";s:4:"user";s:6:"helena";s:11:"last_change";a:8:{s:4:"date";i:1489403606;s:2:"ip";s:11:"87.249.6.34";s:4:"type";s:1:"E";s:2:"id";s:10:"monitoring";s:4:"user";s:6:"helena";s:3:"sum";s:0:"";s:5:"extra";s:0:"";s:10:"sizechange";i:9;}s:11:"contributor";a:1:{s:6:"helena";s:14:"Helen Nevskaya";}s:5:"title";s:17:"Naming convention";s:11:"description";a:2:{s:15:"tableofcontents";a:16:{i:0;a:4:{s:3:"hid";s:17:"naming_convention";s:5:"title";s:17:"Naming convention";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:45:"httpmonitoringlinkit360ru_dashboard_db_mumbai";s:5:"title";s:50:"http://monitoring.linkit360.ru/dashboard/db/mumbai";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:2;a:4:{s:3:"hid";s:43:"best_practices_of_monitoring_metrics_naming";s:5:"title";s:43:"Best practices of monitoring metrics naming";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:3;a:4:{s:3:"hid";s:59:"best_practices_of_alerting_policy_written_by_rob_ewaschuk_s";s:5:"title";s:59:"Best practices of alerting policy written by Rob Ewaschuk's";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:4;a:4:{s:3:"hid";s:23:"how_to_query_prometheus";s:5:"title";s:23:"How to query prometheus";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:5;a:4:{s:3:"hid";s:6:"alters";s:5:"title";s:6:"Alters";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:6;a:4:{s:3:"hid";s:7:"systemd";s:5:"title";s:8:"Systemd:";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:7;a:4:{s:3:"hid";s:4:"urls";s:5:"title";s:5:"Urls:";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:8;a:4:{s:3:"hid";s:11:"dispatcherd";s:5:"title";s:11:"Dispatcherd";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:9;a:4:{s:3:"hid";s:8:"contentd";s:5:"title";s:8:"Contentd";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:10;a:4:{s:3:"hid";s:9:"qlistener";s:5:"title";s:9:"QListener";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:11;a:4:{s:3:"hid";s:17:"queues_stat_types";s:5:"title";s:18:"Queues stat types:";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:12;a:4:{s:3:"hid";s:6:"queues";s:5:"title";s:6:"Queues";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:13;a:4:{s:3:"hid";s:14:"queue_specific";s:5:"title";s:15:"Queue specific:";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:14;a:4:{s:3:"hid";s:7:"billing";s:5:"title";s:7:"Billing";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:15;a:4:{s:3:"hid";s:7:"overall";s:5:"title";s:7:"Overall";s:4:"type";s:2:"ul";s:5:"level";i:1;}}s:8:"abstract";s:366:"Naming convention

Inside the Prometheus config, we could make a single alert rule if there are such metric in each service (without service prefix but with job/service marker to distinguish them). 

See example alert for up and for golang metrics.

It's easier to maintain them, less wrinting, more understandable, so let's common metrics be without service prefix.";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1489403466;s:8:"modified";i:1489403606;}s:7:"creator";s:14:"Helen Nevskaya";s:4:"user";s:6:"helena";s:11:"last_change";a:8:{s:4:"date";i:1489403606;s:2:"ip";s:11:"87.249.6.34";s:4:"type";s:1:"E";s:2:"id";s:10:"monitoring";s:4:"user";s:6:"helena";s:3:"sum";s:0:"";s:5:"extra";s:0:"";s:10:"sizechange";i:9;}s:11:"contributor";a:1:{s:6:"helena";s:14:"Helen Nevskaya";}}}