### Задачи сервиса

Это воркер, который занимается основной бизнес логикой https://github.com/linkit360/go-mt

В очередях ходят задачи (подписки). 

* ```mt manager``` **решает задачи**, например, 
  * создать "новые подписки" и 
  * обработать "ответы от операторов" по подписке. 

* ```mt manager``` **создает задачи** для других сервисов - 
  * сделай в АПИ оператора "запросы на тарификацию" и 
  * "отправка СМС" к АПИ оператора (отправлка контента или уведомление о подписке/отписке и тп) 
  * "запиши в базу изменения" для подписок, когда не так важна скорость появления в базе изменений, - в qlistener. 

* ```mt manager``` **напрямую ходит в базу**, чтобы 
  * проставить статус подписке (pending для запросов на тарификацию) или 
  * создать новую подписку, а также, 
  * чтобы получить список записей для обработки ("список всех periodic, которые нужно сегодня протарифицировать).

* ```mt manager``` перед тем, как обработать задачу (то есть подписчика, подписку) **делает проверки** - 
  * номер из черного списка? (blacklisted), 
  * номер с пост оплатой? (postpaid), 
  * номер уже подписан на эту подписку? (rejected).  


В зависимости от разных операторов, делает или не делает эти проверки/ отправки контентов, отправляет дополнительные запросы на тарификацию абонентов, которые не заплатитили в прошлый раз. 


### Ports

* http 50305


### Metrics

*  http://localhost:50305/metrics

### Locations 

* /metrics

### Queues 

#### In

* [operator_name]_mo_tarifficate
* [operator_name]_responses
* [operator_name]_sms_responses

#### Out

* [operator_name]_requests
* [operator_name]_sms_requests
* pixels

### Tables

* subscriptions 
* retries
* transactions
* msisdn_blacklist
* msisdn_postpaid
* services
* operators


### Scripts

* dev/retries.go 

get retries from json file and put them into database (when start retries failed)