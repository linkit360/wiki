# Beeline

### Описание Конфигурации NGINX

* ```platform.ru.linkit360.ru``` - домен
* ```proxy_pass_header Set-Cookie;``` - для хранения сессии (tid)
* ```underscores_in_headers on;```  - не используется, нужен для мобилинка 
* 80 порт проброшен на  ```http://127.0.0.1:50300;``` - dispatcherd
* ```/api``` смотрит на ```http://127.0.0.1:50306/api;``` -  для HTTP API оператора, (тк оно есть в документации), но тк SMPP гораздо полнее и предоставляет больше возможностей, решили писать сразу для SMPP. HTTP API билайна не реализован. 

### Overview

| User Hit |  Subscription |  Charging | Single/Periodic |  Content Delivery |  Unsubscription | 
| есть логгирование | есть подтверждение и обработка уведомлений | есть обработка уведомлений | код 8580, 20р / день, periodic на стороне оператора |  отстутствует | пишем в лог, отключение на стороне оператора|


### Описание, как должно работать

#### Dispatcher 

Абонент пришел на ```platform.ru.linkit360.ru/campaign/campaign```, он сразу редиректится на лэнд оператора (нашего лэнда в согласованной подписке нет).

```redirectUserBeeline```

* Лэнды для трафика, в отличие от всех остальных операторов/провайдеров, находятся по адресу ```/campaign``` ( а не в ```/lp```). Когда абонент пришел, должны происходить такие события: 
* в очередь ```access_campaign``` - запись для ```xmp_campaign_acceess``` о том, что абонент пришел 
* в очередь ```user_actions``` - что открыта страница (action access) 
* получение кампании по ```campaign_link``` (по строке, которая идет после ```platform.ru.linkit360.ru/campaign```), с помощью параметров составляем url для редиректа на билайн
  * page thank you == ```http://platform.ru.linkit360.ru/lp/campaign``` - куда редиректить пользователя при успешной подписке 
 * page error == куда редиректить в случае ошибки или отказа от подписки

* получаем сервис по кампании (сервис заполняется для записи, которая хранится в кэше, пока абонент не вернется к нам после лэнда оператора - можно перенести вызов ) 
* делаем запрос к билайн c Basic Auth, получаем ссылку для редиректа абонента
* запоминаем в диспатчере номер сессии 
* редиректим абонента по ссылке, которую прислал билайн в ответ на наш запрос. 

```notifyBeeline```

* когда пользователь пришел на ```success link``` (дал согласие на подписку)
* пишем в rabbit ```user_actions``` action == ```pull_click```
* получаем из кэша запись и шлем в билайн подтверждение о подписке 
* пишем в rabbit ```beeline_mo```, что у нас новая подписка 


На этом работа диспатчера закончена. 


#### API оператора

Уведомления о новых подписках, тарификациях пользователя и о других действиях абонента по подписке приходят по smpp на telco API. В telco API только принимаем, и пишем в очередь rabbit для дальнейшей обработки в mt manager. 

* Принять как есть pdu от оператора 
* записать в лог в файл
* отправить в mt manager для обработки в очередь ```beeline_smpp``` 


#### MT manager

1) mt manager из rabbit очереди из ```beeline_mo```  (диспатчер и telco API) - так получам новую подписку. Сохраняет ее в базу. Все остальные действия по новым подпискам делает оператор (списание раз в день, уведомления и тп)

2) Из rabbit очереди ```beeline_smpp``` берем записи от telco API. DstAddr[0:4] - это код сервиса. В DstAddr могут быть значения  85801, 8580, 85801#abcd и тут уже решать нам, - делать по ```xmp_campaigns_keywords``` или получать сервис по DstAddr[0:4].  По коду сервиса 8580 - меньше операций и логичнее. Получение по ```xmp_campaigns_keywords``` дает преимущество - если билайн начнет слать что-то несогласованное и непохожее на 8580 в DstAddr, решается добавлением кода в ```xmp_campaigns_keywords```

* пишем в rabbit в ```operator_transaction_log```
* по source port определяем, уведомление о чем прислал оператор и распределяем по очередям rabbit:

 * 3 - ```mo```, - новая подписка, пишем в ```beeline_mo``` - по идее, не должно приходить такого уведомления, тк мы создаем подписку из диспатчера. Но если вдруг абоннет решил подписаться через СМС, то к нам прийдет такое уведомление
 * 4 - отписка,```Unsubscribe``` в ```mt_manager``` уведомление об отписке
 * 5 - оплачено,  ```WriteTransaction``` в ```mt_manager``` уведомление об оплате
 * 1,6 - отписка от всего, ```UnsubscribeAll``` в ```mt_manager```, purge уведомление
 * 7 - абонент блокирует свою симку. Мы пишем в лог и больше ничего не делаем, тк все действия на стороне оператора.
 * 9 - MNP, абонент мигрирует на другого оператора. Пишем в лог, больше ничего не делаем, тк с другими российскими операторами нет подключений, это относится к оттоку абонента, стОит выставлять статус подписки (в todo либо решили не делать, до поры). 



### Content delivery

Что будем продавать на билайне - еще не определено, тк рынок сильно отличается от Пакистана/Бангладеша. Варианты - юмористическая подписка на шутки. Для такой подписки нужно добавить в mt manager отправку контента в СМС по аналогии с qrtech / yondu (и согласовать отправку контента в билайне). 


### Use cases 

Если зайти на ```platform.ru.linkit360.ru/campaign/campaign``` с билайновской симки, и подписаться, то

* ежедневно должно списываться по 20 руб.  - списывается. 
* при активации подписки должно приходить уведомление на api - не приходило в прошлых тестах (мы написали техникам билайна, те еще думают, почему)
* о попытке списания средств со счета абонента должно приходить уведомление - приходит (успешно/не успешно)
* схемы, документация и описание https://github.com/linkit360/go-operator/tree/master/ru/beeline/doc 


### Testing 

Для тестирования SMPP пакетов приходящих от beeline, на dev поднят smpp selenium server.  Чтобы его запустить, нужно его запустить и открыть smpp.dev.pk.linkit360.ru, либо задать параметры в GET запросе:

Тестирование beeline лэнда происходит только на боевом сервере, тк согласован только один IP адрес. Если после того, как пользователь согласился на подписку, находясь на лэнде оператора, мы не прислали им уведомления-подтверждения с номером сессии, билайн не начинает подписку. 

* ```cd /var/www/SMPPSim```
* ```./startwith.sh conf/smppsim.props```
* ```get url http://smpp.dev.pk.linkit360.ru/inject_mo?short_message=Hello+from+SMPPSim&source_addr=79661904936&destination_addr=8580&submit=Submit+Message&service_type=&source_addr_ton=1&source_addr_npi=1&dest_addr_ton=1&dest_addr_npi=1&esm_class=0&protocol_ID=&priority_flag=&registered_delivery_flag=0&data_coding=0&user_message_reference=&source_port=4&destination_port=&sar_msg_ref_num=&sar_total_segments=&sar_segment_seqnum=&user_response_code=&privacy_indicator=&payload_type=&message_payload=&callback_num=&source_subaddress=&dest_subaddress=&language_indicator=&tlv1_tag=&tlv1_len=&tlv1_val=&tlv2_tag=&tlv2_len=&tlv2_val=&tlv3_tag=&tlv3_len=&tlv3_val=&tlv4_tag=&tlv4_len=&tlv4_val=&tlv5_tag=&tlv5_len=&tlv5_val=&tlv6_tag=&tlv6_len=&tlv6_val=&tlv7_tag=&tlv7_len=&tlv7_val=```


### Контактные лица и правила для уточнения технических деталей

* указать id партнера (smpp, http id логин)
* указать IP адрес с которого делался запрос
* указать параметры
* указать, что получили и что ожидается вместо чего

Адрес "кому" ithelpdesk@beeline.ru.

В Копию поставить: kirill.goryunov@linkit360.com, xavier@linkit360.com, cpa@beeline.ru
cpa@beeline.ru - это Мария Вершинина, наш менеджер. 



# Scheme 

 {{ undefined:beeline.png }}